{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This template deploys all components to support the application, with the exception of those related to BIG-IP.  An autoscaling group for the application is created, but we leave the creation of CloudWatch alarms and scaling policies as an exercise for the future. Disclaimer: More realistic application template would take AMI ID as input, with AMI ID being be artifact of a build pipe line.",
  "Parameters": {
    "deploymentName" : {
      "Description" : "Name the template uses to create object names",
      "Type" : "String",
      "MaxLength": 20,
      "Default": "example"
    },
    "application" : {
      "Description" : "Service Name Short- used for creating objects. ex. service1",
      "Type" : "String",
      "MaxLength": 20,
      "Default": "f5demoapp"
    },
    "vpc": {
      "Description": "Common VPC for whole deployment",
      "Type": "AWS::EC2::VPC::Id"
    },
    "applicationSubnets": {
      "Description": "Application Subnet IDs",
      "Type": "List<AWS::EC2::Subnet::Id>"
    },
    "instanceType": {
      "AllowedValues": [
        "t2.small"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type",
      "Default": "t2.small",
      "Description": "App EC2 instance type",
      "Type": "String"
    },
    "sshKey": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "restrictedSrcAddress" : {
      "Description" : " The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "containerName" : {
      "Description" : "Container Name",
      "Type" : "String",
      "Default": "f5devcentral/f5-demo-app:latest"
    }
  },
  "Mappings": {
    "imageRegionMap": {
      "ap-northeast-1": {
        "AMI":"ami-0302a0802f3af99c3"
      }, 
      "ap-northeast-2": {
        "AMI":"ami-02521564542c36598"
      }, 
      "ap-south-1": {
        "AMI":"ami-082a6fa1323220df6"
      }, 
      "ap-southeast-1": {
        "AMI":"ami-0339dda2d3299215e"
      }, 
      "ap-southeast-2": {
        "AMI":"ami-0cdc8b504a456defb"
      }, 
      "ca-central-1": {
        "AMI":"ami-00d53965ede0c14c3"
      }, 
      "eu-central-1": {
        "AMI":"ami-045182306aba63e33"
      }, 
      "eu-west-1": {
        "AMI":"ami-0220a3a426e69bb5f"
      }, 
      "eu-west-2": {
        "AMI":"ami-0b0743be1165267f5"
      }, 
      "eu-west-3":{
        "AMI":"ami-0e0275aee483bda47"
      },
      "sa-east-1": {
        "AMI":"ami-0b1e3a4386ff536f1"
      }, 
      "us-east-1": {
        "AMI":"ami-00ddb0e5626798373"
      }, 
      "us-east-2": {
        "AMI":"ami-0dd9f0e7df0f0a138"
      }, 
      "us-west-1": {
        "AMI":"ami-0a741b782c2c8632d"
      }, 
      "us-west-2": {
        "AMI":"ami-0ac73f33a1888c64a"
      }
    }
  },
  "Resources": {
      "appSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "vpc"
        },
        "GroupDescription": "Enable SSH access via port 22 and enable access to web on 80 and 443",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": { "Ref": "restrictedSrcAddress" }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": { "Ref": "restrictedSrcAddress" }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": { "Ref": "restrictedSrcAddress" }
          }
        ],
        "Tags": [
            {
              "Key": "Name",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "deploymentName"
                    },
                    "-",
                    {
                      "Ref": "application"
                    },
                    " app security group"
                  ]
                ]
              }
            },
            {
              "Key": "Application",
              "Value": {
                "Ref": "application"
              }
            }
        ]
      }
    },
    "appLaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "imageRegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "InstanceType": {
          "Ref": "instanceType"
        },
        "AssociatePublicIpAddress": false,
        "KeyName": {
          "Ref": "sshKey"
        },
        "SecurityGroups": [
          {
            "Ref": "appSecurityGroup"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "### Xenial 16.04\n",
                "# Install Docker\n",
                "sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - \n",
                "sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\n",
                "sudo apt-get update\n",
                "sudo apt-get install -y docker-ce\n",
                "# Deploy App\n",
                "sudo docker run --name f5demo -p 80:80 -p 443:443 -d ",
                {
                  "Ref": "containerName"
                },
                "\n"
              ]
            ]
          }
        }
      }
    },
    "appAutoscaleGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "App Autoscale Instance: ",
                  {
                    "Ref": "deploymentName"
                  },
                  "-",
                  {
                    "Ref": "application"
                  }
                ]
              ]
            },
            "PropagateAtLaunch": true
          },
          {
            "Key": "Application",
            "Value": {
              "Ref": "application"
            },
            "PropagateAtLaunch": true
          },
          {
            "Key": "containerName",
            "Value": {
              "Ref": "containerName"
            },
            "PropagateAtLaunch": true
          }
        ],
        "VPCZoneIdentifier": { "Ref": "applicationSubnets" },
        "Cooldown": "600",
        "HealthCheckGracePeriod": 120,
        "LaunchConfigurationName": {
          "Ref": "appLaunchConfig"
        },
        "MaxSize": "3",
        "MinSize": "1",
        "MetricsCollection": [
          {
            "Granularity": "1Minute"
          }
        ]
      },
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
         "MaxBatchSize": "1",
         "MinInstancesInService": "1",
         "PauseTime": "PT3M"
        }
      }
    }
  },
  "Outputs": {
    "appAutoscaleGroupName": {
      "Value": {
        "Ref": "appAutoscaleGroup"
      }
    }
  }
}